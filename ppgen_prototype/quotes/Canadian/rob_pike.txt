Canadian,Author
The process of software development doesn't feel any better than it did a generation ago.
To write a kernel without a data structure and have it be as consistent and graceful as UNIX would have been a much, much harder challenge.
When Steve Jobs died last week, there was a huge outcry, and that was very moving and justified.
Go is an attempt to combine the safety and performance of statically typed languages with the convenience and fun of dynamically typed interpretative languages.
We're systems software people ourselves. We wanted a language to make our lives better.
Pretty much everything on the web uses those two things: C and UNIX. The browsers are written in C. The UNIX kernel - that pretty much the entire Internet runs on - is written in C.
Web servers are written in C, and if they're not, they're written in Java or C++, which are C derivatives, or Python or Ruby, which are implemented in C.
You have to make a decision whether it's a new product or you integrate it with an existing product. It takes time to work these things out.
Dynamic typing is not necessarily good. You get static errors at run time, which you really should be able to catch at compile time.
We don't believe we've solved the multicore-programming problem. But we think we've built an environment in which a certain class of problems can take advantage of the multicore architecture.
